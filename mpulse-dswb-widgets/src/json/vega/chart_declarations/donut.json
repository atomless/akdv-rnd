{
  "$schema": "https://vega.github.io/schema/vega/v4.json",
  "width": 400,
  "height": 400,
  "padding": 20,
  "autosize": "fit",
  "signals": [
    {
      "name": "width",
      "update": "width - 40"
    },
    {
      "name": "height",
      "update": "height - 40"
    },
    {
      "name": "data_ready",
      "value": false,
      "update": "data('table').length > 0"
    },    
    {
      "name": "scalingFactor",
      "value": 2
    },
    {
      "name": "akdv_multiselect",
      "value": false,
      "on": [
        {
          "events": "@legendSymbol:click, @legendLabel:click, @donutSegmentMark:click",
          "update": "event.shiftKey",
          "force": true
        }
      ]
    },
    {
      "name": "akdv_clicked",
      "value": null,
      "on": [
        {
          "events": "@legendSymbol:click, @legendLabel:click, @donutSegmentMark:click",
          "update": "datum.value || datum[0]",
          "force": true
        },
        {
          "events": "mouseup[!event.item]",
          "update": "false",
          "force": true
        }
      ]
    },
    {
      "name": "hover",
      "value": null,
      "on": [
        {
          "events": "@legendSymbol:mouseover, @legendLabel:mouseover, @donutSegmentMark:mouseover",
          "update": "datum.value || datum[0]",
          "force": true
        },
        {
          "events": "@legendSymbol:mouseout, @legendLabel:mouseout, @donutSegmentMark:mouseout",
          "update": "{value: null}",
          "force": true
        }        
      ]
    },    
    {
      "name": "startAngle",
      "value": 0
    },
    {
      "name": "endAngle",
      "value": 6.29
    },
    {
      "name": "padAngle",
      "value": 0
    },
    {
      "name": "legendMaxWidth",
      "value": 250
    },
    {
      "name": "minDimension",
      "update": "min(width,height+legendMaxWidth)"
    },
    {
      "name": "innerRadiusRatio",
      "value": 0.4
    },
    {
      "name": "outerRadiusRatio",
      "value": 0.7
    },
    {
      "name": "hoverScale",
      "value": 1.05
    },
    {
      "name": "sort",
      "value": false
    }
  ],
  "data": [
    {
      "name": "table",
      "transform": [
        {
          "type": "pie",
          "field": "1",
          "startAngle": {
            "signal": "startAngle"
          },
          "endAngle": {
            "signal": "endAngle"
          },
          "sort": {
            "signal": "sort"
          }
        }
      ]
    },
    {
      "name": "total",
      "source": "table",
      "transform": [
        {
          "type": "aggregate",
          "fields": [
            "1"
          ],
          "ops": [
            "sum"
          ],
          "as": ["sum"]
        }
      ]
    },
    {
      "name": "selected",
      "on": [
        {
          "trigger": "!akdv_clicked || !akdv_multiselect",
          "remove": true
        },
        {
          "trigger": "akdv_clicked",
          "insert": "akdv_clicked"
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "color",
      "type": "ordinal",
      "range": {
        "scheme": "category20"
      }
    }
  ],
  "legends": [
    {
      "fill": "color",
      "orient": "top-left",
      "gridAlign": "none",
      "rowPadding": {
        "signal": "max(round(height/100)-4,0)" 
      },
      "labelLimit": {
        "signal": "legendMaxWidth"
      },
      "encode": {
        "title": {
          "enter": {
            "fill": {
              "value": "var(--prime_txt_heading)"
            }
          }
        },
        "labels": {
          "name": "legendLabel",
          "interactive": true,
          "enter": {
            "tooltip": [
              {
                "signal": "{'title': datum.value, 'Percentage': format(data('table')[datum.index][1] / data('total')[0].sum,'0.2%'), 'Total': format(data('table')[datum.index][1],',') }"
              }
            ]  
          },
          "update": {
            "fill": [
              {
                "test": "(hover && datum.value == hover) || (length(data('selected')) && indata('selected', 'data', datum.value))",
                "value": "var(--prime_txt_body_strong)"
              },
              {
                "value": "var(--prime_txt_body)"
              }
            ]
          }       
        },
        "symbols": {
          "name": "legendSymbol",
          "interactive": true,
          "update": {
            "stroke": {
              "value": "transparent"
            },
            "opacity": [
              {
                "test": "!length(data('selected')) || indata('selected', 'data', datum.value)",
                "value": 0.7
              },
              {
                "value": 0.15
              }
            ]
          }
        }
      }
    }
  ],
  "marks": [
    {
      "name": "donutSegmentMark",
      "type": "arc",
      "from": {
        "data": "table"
      },
      "encode": {
        "enter": {
          "fill": {
            "scale": "color",
            "field": "0"
          },
          "startAngle": {
            "field": "startAngle"
          },
          "endAngle": {
            "field": "endAngle"
          },
          "padAngle": {
            "signal": "padAngle"
          },
          "stroke": {
            "value": "var(--prime_bg_0)"
          },
          "strokeWidth": {
            "value": 2
          },
          "tooltip": [
            {
              "signal": "{'title': datum[0], 'Percentage': format(datum[1] / data('total')[0].sum,'0.2%'), 'Total': format(datum[1],',') }"
            }
          ]
        },
        "update": {
          "x": {
              "signal": "width - ((minDimension / scalingFactor) * outerRadiusRatio)"
          },
          "y": {
            "signal": " minDimension / scalingFactor * outerRadiusRatio"
          },
          "innerRadius": [
            {
              "signal": "(minDimension / scalingFactor) * innerRadiusRatio"
            }
          ],
          "outerRadius": [
            {
              "test": "(hover && datum[0] == hover) || (length(data('selected')) && indata('selected', 'data', datum[0]))",
              "signal": "(minDimension / scalingFactor) * outerRadiusRatio * hoverScale"
            },
            {
              "signal": "(minDimension / scalingFactor) * outerRadiusRatio"
            }
          ],
          "opacity": [
            {
              "test": "(!length(data('selected')) || indata('selected', 'data', datum[0]))",
              "value": 0.9
            },
            {
              "value": 0.45
            }
          ]
        }
      }
    },
    {
      "name": "donutSegmentText",
      "type": "text",
      "from": {
        "data": "table"
      },
      "encode": {
        "enter": {
          "theta": {
            "signal": "(datum.startAngle + datum.endAngle) / 2"
          },
          "align": {
            "value": "center"
          },
          "baseline": {
            "value": "middle"
          }
        },
        "update": {
          "fill": [
            {
              "test": "((datum[1] / data('total')[0].sum) > 0.1) && height > 300",
              "value": "var(--prime_button_txt_active)"
            },
            {
              "value": "none"
            }
          ],
          "text": [
            {
              "test": "(datum[1] / data('total')[0].sum) > 0.1",
              "signal": "format(datum[1] / data('total')[0].sum,'0.1%')"
            },
            {
              "signal": ""
            }
          ],
          "x": {
              "signal": "width - ((minDimension / scalingFactor) * outerRadiusRatio)"
          },
          "y": {
            "signal": " (minDimension / scalingFactor) * outerRadiusRatio"
          },
          "radius": {
            "signal": "((((minDimension / scalingFactor) * outerRadiusRatio) + (minDimension / scalingFactor) * innerRadiusRatio) / 2) + 4"
          }          
        }        
      }
    }
  ]
}