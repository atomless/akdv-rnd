{
  "$schema": "https://vega.github.io/schema/vega/v4.json",
  "padding": 10,
  "autosize": {
    "type": "fit"
  },
  "legends": [
    {
      "fill": "breadcrumb_scale",
      "direction": "horizontal",
      "orient": "none",
      "labelFont": "Ideal Sans, Avenir Next, Helvetica",
      "labelPadding": 10,
      "labelOffset": 10,
      "labelBaseline": "top",
      "symbolOffset": -10,
      "encode": {
        "labels": {
          "name": "breadcrumb_legend",
          "interactive": true,
          "update": {
            "fontSize": {"value": 13},
            "fill": {"value": "hsl(195, 80%, 37%)"}
          },
          "hover": {
            "fill": {"value": "hsl(195, 80%, 57%)"}
          }
        },
        "symbols": {
          "interactive": false,
          "update": {
            "fill": {"value": "none"},
            "y": {"value": 8},
            "stroke": {"signal": "datum.index === 0? 'none' : 'hsl(195, 50%, 70%)'"},
            "shape": {
              "value": "M0.5 0.1 L1.5 1 L0.5 1.9 M1.5 1 Z"
            }
          }
        }
      },
      "zindex": 10
    }
  ],
  "signals": [
    {
      "name": "hierarchy_array_signal",
      "value": [
        "mediatype",
        "host",
        "path"
      ]
    },
    {
      "name": "selected_node_breadcrumb_push_signal",
      "value": [],
      "force": false,
      "on": [
        {
          "comment": "function treeAncestors(name, node) { var id = node[Object.getOwnPropertySymbols(node).find(function(s) { return String(s) === 'Symbol(vega_id)';})]; var n = treeNodes(name, this)[id]; return n? n.ancestors().map(datum) : undefined; }",
          "events": "@treemap_nodes_mark:click",
          "update": "datum.depth === 0? selected_node_breadcrumb_push_signal : (current_zoom_depth_signal === 0 || current_zoom_depth_signal < length(hierarchy_array_signal))? slice(reverse(treeAncestors('tree_data', datum)), current_zoom_depth_signal === 0? 0 : 1) : selected_node_breadcrumb_push_signal"
        }
      ]
    },
    {
      "name": "selected_node_breadcrumb_pop_signal",
      "value": [],
      "on": [
        {
          "events": "@breadcrumb_legend:click",
          "update": "datum.index === 0? [] : slice(data('selected_node_breadcrumb_data'), 0, datum.index + 1)"
        }
      ]
    },
    {
      "name": "akdv_selected_node_signal",
      "value": null,
      "on": [
        {
          "events": "@treemap_nodes_mark:click",
          "update": "datum.depth === 0? akdv_selected_node_signal : {type: 'expression', method: 'flatten_hierarchy', args: [datum, 'values', ['id', 'key']]}"
        },
        {
          "events": "@breadcrumb_legend:click",
          "update": "{type: 'expression', method: 'flatten_hierarchy', args: [data('selected_node_breadcrumb_data')[datum.index], 'values', ['id', 'key']]}"
        }             
      ]
    },
    {
      "name": "current_zoom_depth_signal",
      "value": 0,
      "on": [
        {
          "events": "@treemap_nodes_mark:click",
          "update": "datum.depth === 0? current_zoom_depth_signal : current_zoom_depth_signal < length(hierarchy_array_signal)? min(current_zoom_depth_signal + length(selected_node_breadcrumb_push_signal), length(hierarchy_array_signal)) : current_zoom_depth_signal"
        },
        {
          "events": "@breadcrumb_legend:click",
          "update": "max(0, length(selected_node_breadcrumb_pop_signal) - 1)"
        }
      ]
    },
    {
      "name": "height_signal",
      "update": "height - 20"
    },
    {
      "name": "width_signal",
      "update": "width - 20"
    }
  ],
  "data": [
    {
      "name": "raw_data",
      "url": "https://dswb-static.soasta.com/2.2.4/data/treemap.json"
    },
    {
      "name": "table_data",
      "source": "raw_data",
      "transform": [
        {
          "type": "project",
          "fields": [
            "charts[0].data"
          ],
          "as": [
            "data"
          ]
        },
        {
          "type": "flatten",
          "fields": [
            "data"
          ]
        },
        {
          "type": "project",
          "fields": [
            "data.cachehitratio",
            "data.mediatype",
            "data.path",
            "data.host",
            "data.avg_transfer_size",
            "data.hits",
            "data.load_time"
          ],
          "as": [
            "cachehitratio",
            "mediatype",
            "path",
            "host",
            "avg_transfer_size",
            "hits",
            "load_time"
          ]
        },
        {
          "type": "identifier",
          "as": "id"
        }
      ]
    },
    {
      "name": "akdv_selected_node_data",
      "values": [],
      "comment": "Data response written by akdv_selected_node_signal AKDV flatten_hierarchy expression"
    },
    {
      "name": "selected_node_breadcrumb_data",
      "on": [
        {
          "trigger": "selected_node_breadcrumb_push_signal",
          "remove": false,
          "insert": "selected_node_breadcrumb_push_signal"
        },
        {
          "trigger": "selected_node_breadcrumb_pop_signal",
          "remove": true,
          "insert": "selected_node_breadcrumb_pop_signal"
        }
      ],
      "transform": [
        {
          "type": "formula", "as": "key", "expr": "datum.key? datum.key : datum[peek(hierarchy_array_signal)] || slice(hierarchy_array_signal, 0, 1)[0]"
        }
      ]
    },
    {
      "name": "tree_data",
      "source": "table_data",
      "transform": [
        {
          "type": "filter",
          "expr": "!data('akdv_selected_node_data').length || indata('akdv_selected_node_data', 'id', datum.id)"
        },
        {
          "type": "collect",
          "sort": {"field": "hits", "order": "descending"}
        },
        {
          "type": "nest",
          "generate": true,
          "keys": {
            "signal": "slice(hierarchy_array_signal, current_zoom_depth_signal, -1)"
          }
        },
        {
          "type": "treemap",
          "field": "hits",
          "method": "resquarify",
          "ratio": 1,
          "paddingInner": 1,
          "paddingOuter": 1,
          "paddingTop": {
            "signal": "28"
          },
          "size": [
            {
              "signal": "width_signal"
            },
            {
              "signal": "height_signal"
            }
          ]
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "hue_scale",
      "type": "linear",
      "domain": [0, 600],
      "reverse": true,
      "zero": false,
      "range": [0, 100],
      "count": 100
    },
    {
      "name": "depth_scale",
      "type": "linear",
      "range": [
        85,
        94
      ],
      "domain": {
        "data": "tree_data",
        "field": "depth"
      }
    },
    {
      "name": "breadcrumb_scale",
      "type": "band",
      "domain": {
        "data": "selected_node_breadcrumb_data", 
        "field": "key"
      },
      "range": [1, 1]
    }
  ],
  "marks": [
    {
      "type": "rect",
      "name": "treemap_nodes_mark",
      "from": {
        "data": "tree_data"
      },
      "interactive": true,
      "sort": {
        "field": "datum.depth",
        "reverse": true
      },
      "encode": {
        "enter": {},
        "update": {
          "cursor": {
            "value": "pointer"
          },
          "x": {
            "field": "x0"
          },
          "y": {
            "field": "y0"
          },
          "x2": {
            "field": "x1"
          },
          "y2": {
            "field": "y1"
          },
          "fill": {
            "signal": "datum.children === 0? 'hsl('+clamp(scale('hue_scale', datum.load_time), 0,120) + ',95%,45%)' : 'hsl(208,7%,'+ scale('depth_scale', datum.depth) +'%)'"
          }
        }
      }
    },
    {
      "type": "text",
      "name": "treemap_nodes_label_mark",
      "from": {
        "data": "tree_data"
      },
      "interactive": false,
      "encode": {
        "enter": {
          "fill": {
            "signal": "datum.children === 0? 'white' : 'hsl(195, 80%, 37%)'"
          },
          "align": {
            "signal": "datum.children === 0? 'right' : 'left'"
          },
          "baseline": {
            "signal": "datum.children === 0? 'bottom' : 'middle'"
          }
        },
        "update": {
          "fontSize": {"value": 13},
          "x": {
            "signal": "datum.children === 0? datum.x1 : datum.x0"
          },
          "y": {
            "signal": "datum.children === 0? datum.y1 : datum.y0"
          },
          "dy": {
            "signal": "datum.children === 0? -7 : 50 / 4"
          },
          "dx": {
            "signal": "datum.children === 0? -7 : 7"
          },
          "text": {
            "signal": "(datum.x1 - datum.x0 > 40 && datum.y1 - datum.y0 > 50)? datum.depth === 0? '' : datum.children === 0? truncate(datum[hierarchy_array_signal[hierarchy_array_signal.length - 1]], (datum.x1 - datum.x0) / 8, 'left') : truncate(datum.key, (datum.x1 - datum.x0) / 8) : ''"
          }
        }
      }
    }
  ]
}